version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: frontend/
      dockerfile: ./Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - MONGO_DB=cocktaildb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis

  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=cocktaildb
    volumes:
      - mongodb_data_dev:/data/db

  redis:
    image: redis:7.4-alpine
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data_dev:/data

  reverseproxy:
    restart: always
    build:
      context: reverseproxy/
      dockerfile: ./Dockerfile.dev
    depends_on:
      - backend
      - frontend
    volumes:
      - ./reverseproxy/nginx.dev.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80

volumes:
  mongodb_data_dev:
  redis_data_dev:

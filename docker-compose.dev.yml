version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: frontend/
      dockerfile: ./Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app_network
    environment:
      - VITE_API_URL=http://localhost:8080/api



  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/cocktaildb
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - app_network

  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=cocktaildb
    volumes:
      - mongodb_data_dev:/data/db
    networks:
      - app_network

  redis:
    image: redis:7.4-alpine
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data_dev:/data
    networks:
      - app_network
    ports:
      - "6379:6379"

  reverseproxy:
    container_name: reverseproxy
    restart: always
    build:
      context: ./reverseproxy
      dockerfile: Dockerfile
    depends_on:
      - frontend
      - backend
    volumes:
      - ./reverseproxy/nginx.dev.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:8080
    networks:
      - app_network

volumes:
  mongodb_data_dev:
  redis_data_dev:

networks:
  app_network:
    driver: bridge
